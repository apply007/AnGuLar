{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nexport class AuthInterceptorService {\n  intercept(req, next) {\n    console.log('Auth Interceptor called!');\n    const modifiedReq = req.clone({\n      headers: req.headers.append('auth', 'abcxyz')\n    });\n    return next.handle(modifiedReq).pipe(tap(event => {\n      if (event.type === HttpEventType.Response) {\n        console.log('Response has arrived. Response data: ');\n        console.log(event.body);\n      }\n    }));\n  }\n}","map":{"version":3,"names":["HttpEventType","tap","AuthInterceptorService","intercept","req","next","console","log","modifiedReq","clone","headers","append","handle","pipe","event","type","Response","body"],"sources":["F:\\GitPractice\\angular-16-complete-course\\14-angulat-http-client\\final\\src\\app\\Services\\auth-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEventType } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor{\r\n    intercept(req: HttpRequest<any>, next: HttpHandler){\r\n        console.log('Auth Interceptor called!');\r\n        const modifiedReq = req.clone({headers: req.headers.append('auth', 'abcxyz')})\r\n        return next.handle(modifiedReq).pipe(tap((event) => {  \r\n            if(event.type === HttpEventType.Response){\r\n                console.log('Response has arrived. Response data: ');\r\n                console.log(event.body)\r\n            }\r\n        }));\r\n    }\r\n}"],"mappings":"AACA,SAAoDA,aAAa,QAAQ,sBAAsB;AAC/F,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,OAAM,MAAOC,sBAAsB;EAC/BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,MAAMC,WAAW,GAAGJ,GAAG,CAACK,KAAK,CAAC;MAACC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,MAAM,CAAC,MAAM,EAAE,QAAQ;IAAC,CAAC,CAAC;IAC9E,OAAON,IAAI,CAACO,MAAM,CAACJ,WAAW,CAAC,CAACK,IAAI,CAACZ,GAAG,CAAEa,KAAK,IAAI;MAC/C,IAAGA,KAAK,CAACC,IAAI,KAAKf,aAAa,CAACgB,QAAQ,EAAC;QACrCV,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACpDD,OAAO,CAACC,GAAG,CAACO,KAAK,CAACG,IAAI,CAAC;;IAE/B,CAAC,CAAC,CAAC;EACP"},"metadata":{},"sourceType":"module","externalDependencies":[]}